/* @preserve
* @esri/arcgis-rest-routing - v3.4.3 - Apache-2.0
* Copyright (c) 2017-2021 Esri, Inc.
* Fri Oct 29 2021 14:49:41 GMT-0600 (Mountain Daylight Time)
*/
!function(r,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@esri/arcgis-rest-request")):"function"==typeof define&&define.amd?define(["exports","@esri/arcgis-rest-request"],e):e((r="undefined"!=typeof globalThis?globalThis:r||self).arcgisRest=r.arcgisRest||{},r.arcgisRest)}(this,function(r,t){"use strict";var n=function(){return(n=Object.assign||function(r){for(var e,i=1,t=arguments.length;i<t;i++)for(var n in e=arguments[i])Object.prototype.hasOwnProperty.call(e,n)&&(r[n]=e[n]);return r}).apply(this,arguments)},i="https://route.arcgis.com/arcgis/rest/services/World/Route/NAServer/Route_World",s="https://route.arcgis.com/arcgis/rest/services/World/ClosestFacility/NAServer/ClosestFacility_World",a="https://route.arcgis.com/arcgis/rest/services/World/ServiceAreas/NAServer/ServiceArea_World",o="https://route.arcgis.com/arcgis/rest/services/World/OriginDestinationCostMatrix/NAServer/OriginDestinationCostMatrix_World";function u(r){return r.map(function(r){return 2===(e=r).length||3===e.length?r.join():void 0!==(e=r).latitude||void 0!==e.lat?r.lat?r.long+","+r.lat:r.longitude+","+r.latitude:r.x+","+r.y;var e})}function l(r){for(var e,i,t=0,n=0,s=[],a=r.match(/((\+|-)[^+-]+)/g),o=parseInt(a[0],32),u=1;u<a.length;u+=2)t=e=parseInt(a[u],32)+t,n=i=parseInt(a[u+1],32)+n,s.push([e/o,i/o]);return{paths:[s]}}function c(r){return Object.prototype.hasOwnProperty.call(r,"features")}
/* @preserve
    * @terraformer/arcgis - v2.0.6 - MIT
    * Copyright (c) 2012-2020 Environmental Systems Research Institute, Inc.
    * Mon May 18 2020 14:30:35 GMT-0700 (Pacific Daylight Time)
    */function y(r,e){for(var i=0;i<r.length-1;i++)for(var t=0;t<e.length-1;t++)if(function(r,e,i,t){var n=(t[0]-i[0])*(r[1]-i[1])-(t[1]-i[1])*(r[0]-i[0]),s=(e[0]-r[0])*(r[1]-i[1])-(e[1]-r[1])*(r[0]-i[0]),r=(t[1]-i[1])*(e[0]-r[0])-(t[0]-i[0])*(e[1]-r[1]);if(0!=r){n=n/r,r=s/r;if(0<=n&&n<=1&&0<=r&&r<=1)return!0}return!1}(r[i],r[i+1],e[t],e[t+1]))return!0;return!1}function p(r){for(var e,i,t=[],n=[],s=0;s<r.length;s++){var a=(function(r,e){for(var i=0;i<r.length;i++)if(r[i]!==e[i])return!1;return!0}((a=r[s].slice(0))[0],a[a.length-1])||a.push(a[0]),a);a.length<4||(!function(r){for(var e,i=0,t=0,n=r.length,s=r[t];t<n-1;t++)i+=((e=r[t+1])[0]-s[0])*(e[1]+s[1]),s=e;return 0<=i}(a)?n.push(a.slice().reverse()):(a=[a.slice().reverse()],t.push(a)))}for(var o,u,l,c=[];n.length;){i=n.pop();for(var p=!1,g=t.length-1;0<=g;g--)if(e=t[g][0],l=void 0,l=y(o=e,u=i),u=function(r,e){for(var i=!1,t=-1,n=r.length,s=n-1;++t<n;s=t)(r[t][1]<=e[1]&&e[1]<r[s][1]||r[s][1]<=e[1]&&e[1]<r[t][1])&&e[0]<(r[s][0]-r[t][0])*(e[1]-r[t][1])/(r[s][1]-r[t][1])+r[t][0]&&(i=!i);return i}(o,u[0]),!(l||!u)){t[g].push(i),p=!0;break}p||c.push(i)}for(;c.length;){i=c.pop();var f=!1;for(g=t.length-1;0<=g;g--)if(e=t[g][0],y(e,i)){t[g].push(i),f=!0;break}f||t.push([i.reverse()])}return 1===t.length?{type:"Polygon",coordinates:t[0]}:{type:"MultiPolygon",coordinates:t}}var g=function r(e,i){var t={};if(e.features){t.type="FeatureCollection",t.features=[];for(var n=0;n<e.features.length;n++)t.features.push(r(e.features[n],i))}if("number"==typeof e.x&&"number"==typeof e.y&&(t.type="Point",t.coordinates=[e.x,e.y],"number"==typeof e.z&&t.coordinates.push(e.z)),e.points&&(t.type="MultiPoint",t.coordinates=e.points.slice(0)),e.paths&&(1===e.paths.length?(t.type="LineString",t.coordinates=e.paths[0].slice(0)):(t.type="MultiLineString",t.coordinates=e.paths.slice(0))),e.rings&&(t=p(e.rings.slice(0))),"number"==typeof e.xmin&&"number"==typeof e.ymin&&"number"==typeof e.xmax&&"number"==typeof e.ymax&&(t.type="Polygon",t.coordinates=[[[e.xmax,e.ymax],[e.xmin,e.ymax],[e.xmin,e.ymin],[e.xmax,e.ymin],[e.xmax,e.ymax]]]),(e.geometry||e.attributes)&&(t.type="Feature",t.geometry=e.geometry?r(e.geometry):null,t.properties=e.attributes?function(r){var e,i={};for(e in r)r.hasOwnProperty(e)&&(i[e]=r[e]);return i}(e.attributes):null,e.attributes))try{t.id=function(r,e){for(var i=e?[e,"OBJECTID","FID"]:["OBJECTID","FID"],t=0;t<i.length;t++){var n=i[t];if(n in r&&("string"==typeof r[n]||"number"==typeof r[n]))return r[n]}throw Error("No valid id attribute found")}(e.attributes,i)}catch(r){}return JSON.stringify(t.geometry)===JSON.stringify({})&&(t.geometry=null),e.spatialReference&&e.spatialReference.wkid&&4326!==e.spatialReference.wkid&&console.warn("Object converted in non-standard crs - "+JSON.stringify(e.spatialReference)),t};function f(r){var e;return r.directions&&0<r.directions.length&&(r.directions=r.directions.map(function(r){return r.features=r.features.map(function(r){return r.geometry=l(r.compressedGeometry),r}),r})),4326===r.routes.spatialReference.wkid&&(e=r.routes.features.map(function(r){return{type:"Feature",geometry:g(r.geometry),properties:Object.assign({},r.attributes)}}),r.routes.geoJson={type:"FeatureCollection",features:e}),r}function d(r){return 4326===r.routes.spatialReference.wkid&&(r.routes.geoJson=g(r.routes)),r}function m(r){return delete r.saPolygons.fieldAliases,4326===r.saPolygons.spatialReference.wkid&&(r.saPolygons.geoJson=g(r.saPolygons)),r}r.ARCGIS_ONLINE_CLOSEST_FACILITY_URL=s,r.ARCGIS_ONLINE_ORIGIN_DESTINATION_MATRIX_URL=o,r.ARCGIS_ONLINE_ROUTING_URL=i,r.ARCGIS_ONLINE_SERVICE_AREA_URL=a,r.closestFacility=function(r){var e=r.endpoint||s;r.params=n({returnFacilities:!0,returnDirections:!0,returnIncidents:!0,returnBarriers:!0,returnPolylineBarriers:!0,returnPolygonBarriers:!0,preserveObjectID:!0},r.params);var i=t.appendCustomParams(r,["returnCFRoutes","barriers","polylineBarriers","polygonBarriers","returnDirections","directionsOutputType","directionsLengthUnits","outputLines","returnFacilities","returnIncidents","returnBarriers","returnPolylineBarriers","returnPolygonBarriers","preserveObjectID"]);return r.travelDirection&&(i.params.travelDirection="incidentsToFacilities"===r.travelDirection?"esriNATravelDirectionFromFacility":"esriNATravelDirectionToFacility"),r.authentication||e!==s?(c(r.incidents)?i.params.incidents=r.incidents:i.params.incidents=u(r.incidents).join(";"),c(r.facilities)?i.params.facilities=r.facilities:i.params.facilities=u(r.facilities).join(";"),r.barriers&&(c(r.barriers)?i.params.barriers=r.barriers:i.params.barriers=u(r.barriers).join(";")),t.request(t.cleanUrl(e)+"/solveClosestFacility",i).then(d)):Promise.reject("Finding the closest facility using the ArcGIS service requires authentication")},r.decompressGeometry=l,r.isFeatureSet=c,r.normalizeLocationsList=u,r.originDestinationMatrix=function(r){var e=r.endpoint||o;r.params=n({outputType:"esriNAODOutputSparseMatrix",returnOrigins:!0,returnDestinations:!0,returnBarriers:!0,returnPolylineBarriers:!0,returnPolygonBarriers:!0},r.params);var i=t.appendCustomParams(r,["outputType","barriers","polylineBarriers","polygonBarriers","returnOrigins","returnDestinations","returnBarriers","returnPolylineBarriers","returnPolygonBarriers"]);return r.authentication||e!==o?(c(r.origins)?i.params.origins=r.origins:i.params.origins=u(r.origins).join(";"),c(r.destinations)?i.params.destinations=r.destinations:i.params.destinations=u(r.destinations).join(";"),r.barriers&&(c(r.barriers)?i.params.barriers=r.barriers:i.params.barriers=u(r.barriers).join(";")),t.request(t.cleanUrl(e)+"/solveODCostMatrix",i).then(function(r){return function(r,e){"esriNAODOutputStraightLines"===e.params.outputType&&r.odLines&&4326===r.odLines.spatialReference.wkid&&(r.odLines.geoJson=g(r.odLines));r.origins&&4326===r.origins.spatialReference.wkid&&(r.origins.geoJson=g(r.origins));r.destinations&&4326===r.destinations.spatialReference.wkid&&(r.destinations.geoJson=g(r.destinations));r.barriers&&4326===r.barriers.spatialReference.wkid&&(r.barriers.geoJson=g(r.barriers));r.polygonBarriers&&4326===r.polygonBarriers.spatialReference.wkid&&(r.polygonBarriers.geoJson=g(r.polygonBarriers));r.polylineBarriers&&4326===r.polylineBarriers.spatialReference.wkid&&(r.polylineBarriers.geoJson=g(r.polylineBarriers));return r}(r,i)})):Promise.reject("Calculating the origin-destination cost matrix using the ArcGIS service requires authentication")},r.serviceArea=function(r){var e=r.endpoint||a;r.params=n({returnFacilities:!0,returnBarriers:!0,returnPolylineBarriers:!0,returnPolygonBarriers:!0,preserveObjectID:!0},r.params);var i=t.appendCustomParams(r,["barriers","polylineBarriers","polygonBarriers","outputLines","returnFacilities","returnBarriers","returnPolylineBarriers","returnPolygonBarriers","preserveObjectID"]);return r.travelDirection&&(i.params.travelDirection="incidentsToFacilities"===r.travelDirection?"esriNATravelDirectionFromFacility":"esriNATravelDirectionToFacility"),r.authentication||e!==a?(c(r.facilities)?i.params.facilities=r.facilities:i.params.facilities=u(r.facilities).join(";"),r.barriers&&(c(r.barriers)?i.params.barriers=r.barriers:i.params.barriers=u(r.barriers).join(";")),t.request(t.cleanUrl(e)+"/solveServiceArea",i).then(m)):Promise.reject("Finding service areas using the ArcGIS service requires authentication")},r.solveRoute=function(r){var e=n({endpoint:r.endpoint||i,params:{}},r);return r.authentication||e.endpoint!==i?(c(r.stops)?e.params.stops=r.stops:(r=r.stops.map(function(r){return 2===(e=r).length||3===e.length?r.join():void 0!==(e=r).latitude||void 0!==e.lat?r.lat?r.long+","+r.lat+(r.z?","+r.z:""):r.longitude+","+r.latitude+(r.z?","+r.z:""):r.x+","+r.y+(r.z?","+r.z:"");var e}),e.params.stops=r.join(";")),t.request(t.cleanUrl(e.endpoint)+"/solve",e).then(f)):Promise.reject("Routing using the ArcGIS service requires authentication")},Object.defineProperty(r,"__esModule",{value:!0})});
//# sourceMappingURL=routing.umd.min.js.map