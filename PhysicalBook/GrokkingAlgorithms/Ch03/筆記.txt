3-7
遞迴需注意 避免進入無窮迴圈
1. Base Case 基本情況 函式不在乎叫自己時的情況
2. Recursive Case 遞迴情況 函式呼叫自己本身的情況

堆疊有兩個動作 push(堆入)和 pop(彈出)
所有函式呼叫會產生一個 Call Stack(呼叫堆疊)
遞迴的 Call Stack可能會變得非常大 並且占用大量的記憶體

假設不小心寫了一個無窮迴圈 堆疊會無限增長
每個程式都會限制堆疊的可用空間 當空間用完時 程式就會因為 堆疊溢位而停止